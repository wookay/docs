var documenterSearchIndex = {"docs":
[{"location":"REPL/#@__REPL__","page":"@__REPL__","title":"@__REPL__","text":"","category":"section"},{"location":"REPL/#Jive.@__REPL__","page":"@__REPL__","title":"Jive.@__REPL__","text":"@__REPL__\n\n\n\n\n\n","category":"macro"},{"location":"REPL/","page":"@__REPL__","title":"@__REPL__","text":"test/jive/__REPL__","category":"page"},{"location":"REPL/","page":"@__REPL__","title":"@__REPL__","text":"~/.julia/dev/Jive/test/jive/__REPL__ $ cat test.jl\nusing Jive\n\na = 1\n\n@__REPL__\n\n@info :a a\n~/.julia/dev/Jive/test/jive/__REPL__ $ julia test.jl\njulia> a += 2\n3\n\njulia> ^D  # Ctrl + D to exit the REPL\n‚îå Info: a\n‚îî   a = 3","category":"page"},{"location":"sprints/#sprints","page":"sprints","title":"sprints","text":"","category":"section"},{"location":"sprints/#Jive.sprint_plain","page":"sprints","title":"Jive.sprint_plain","text":"sprint_plain(x)::String\n\nget Base.show text/plain output of the x\n\n\n\n\n\n","category":"function"},{"location":"sprints/#Jive.sprint_colored","page":"sprints","title":"Jive.sprint_colored","text":"sprint_colored(x)::String\n\nget Base.show text/plain output of the x with color\n\n\n\n\n\n","category":"function"},{"location":"sprints/#Jive.sprint_html","page":"sprints","title":"Jive.sprint_html","text":"sprint_html(x)::String\n\nget Base.show text/html output of the x\n\n\n\n\n\n","category":"function"},{"location":"delete/#Jive.delete","page":"Jive.delete","title":"Jive.delete","text":"","category":"section"},{"location":"delete/#Jive.delete","page":"Jive.delete","title":"Jive.delete","text":"Jive.delete(@nospecialize(f), @nospecialize(types::Type{T}) = Tuple{}) where T <: Tuple\n\nMake function f uncallable. same for Base.delete_method(only(methods(f, types)))\n\n\n\n\n\n","category":"function"},{"location":"onlyonce/#@onlyonce","page":"@onlyonce","title":"@onlyonce","text":"","category":"section"},{"location":"onlyonce/","page":"@onlyonce","title":"@onlyonce","text":"used to run the block only once.","category":"page"},{"location":"onlyonce/#Jive.@onlyonce","page":"@onlyonce","title":"Jive.@onlyonce","text":"@onlyonce(block)\n\nused to run the block only once.\n\n\n\n\n\n","category":"macro"},{"location":"onlyonce/","page":"@onlyonce","title":"@onlyonce","text":"using Jive # @onlyonce\n\nfor _ in 1:10\n    @onlyonce begin\n        println(42)\n    end\n    @onlyonce(println(\"hello\"))\nend","category":"page"},{"location":"skip/#@skip","page":"@skip","title":"@skip","text":"","category":"section"},{"location":"skip/","page":"@skip","title":"@skip","text":"skip the expression.","category":"page"},{"location":"skip/#Jive.@skip","page":"@skip","title":"Jive.@skip","text":"@skip\n\nskip the expression.\n\n\n\n\n\n","category":"macro"},{"location":"skip/#Jive.Skipped","page":"@skip","title":"Jive.Skipped","text":"Skipped\n\nSkipped expressions are in Skipped.expressions\n\n\n\n\n\n","category":"module"},{"location":"skip/","page":"@skip","title":"@skip","text":"test/jive/skip","category":"page"},{"location":"skip/","page":"@skip","title":"@skip","text":"using Jive # @skip\n\n@skip module want_to_skip_this_module\nsleep(2)\nend\n\n@skip function want_to_skip_this_function()\nsleep(2)\nend\n\n@skip println(1+2)","category":"page"},{"location":"skip/","page":"@skip","title":"@skip","text":"Change to do not skip the code: ENV[\"JIVE_ENABLE_SKIP_MACRO\"] = \"0\"","category":"page"},{"location":"If/#@If","page":"@If","title":"@If","text":"","category":"section"},{"location":"If/","page":"@If","title":"@If","text":"evaluate the module by the condition.","category":"page"},{"location":"If/#Jive.@If","page":"@If","title":"Jive.@If","text":"@If(condition::Expr, expr::Expr)\n\nevaluate the expr by the condition.\n\n\n\n\n\n","category":"macro"},{"location":"If/","page":"@If","title":"@If","text":"using Jive # @If\n@If VERSION >= v\"1.1.0-DEV.764\" module load_some_module\nend","category":"page"},{"location":"watch/#watch","page":"watch","title":"watch","text":"","category":"section"},{"location":"watch/","page":"watch","title":"watch","text":"watch the folders.","category":"page"},{"location":"watch/","page":"watch","title":"watch","text":"note: Note\nüò≠ it doesn't work as expected.","category":"page"},{"location":"watch/","page":"watch","title":"watch","text":"You may need to install Revise.jl.","category":"page"},{"location":"watch/#Jive.watch","page":"watch","title":"Jive.watch","text":"watch(callback::Function, dir::String; targets=ARGS, sources::Union{Vector{Any},Vector{String}}=[])\n\nwatch the folders.\n\n\n\n\n\n","category":"function"},{"location":"watch/#Jive.stop","page":"watch","title":"Jive.stop","text":"Jive.stop(::typeof(watch))\n\nstop watching folders.\n\n\n\n\n\n","category":"function"},{"location":"watch/","page":"watch","title":"watch","text":"~/.julia/dev/TestJiveRunMoreTestsJive/test/ExampleRevise/test $ cat runtests.jl\nusing Jive\nruntests(@__DIR__, skip=[\"revise.jl\"])\n\n~/.julia/dev/TestJiveRunMoreTestsJive/test/ExampleRevise/test $ cat revise.jl\n# julia -i -q --project=. revise.jl example\n\nusing Revise, Jive\nusing ExampleRevise\nwatch(@__DIR__, sources=[pathof(ExampleRevise)]) do path\n    @info :changed path\n    revise()\n    runtests(@__DIR__, skip=[\"revise.jl\"])\nend\n# Jive.stop(watch)\n\n~/.julia/dev/TestJiveRunMoreTestsJive/test/ExampleRevise/test $ julia -e 'using Pkg; pkg\"dev Revise ..\"'\n\n~/.julia/dev/TestJiveRunMoreTestsJive/test/ExampleRevise/test $ julia --project=. -q -i revise.jl example\nwatching folders ...\n  - ../src\n  - example","category":"page"},{"location":"watch/","page":"watch","title":"watch","text":"when saving any files in the watching folders, it automatically run tests.","category":"page"},{"location":"watch/","page":"watch","title":"watch","text":"julia> ‚îå Info: changed\n‚îî   path = \"../src/ExampleRevise.jl\"\n1/1 example/test1.jl\n    Pass 1  (0.26 seconds)\n‚úÖ  All 1 test has been completed.  (0.55 seconds)\n‚îå Info: changed\n‚îî   path = \"example/test1.jl\"\n1/1 example/test1.jl\n    Pass 1  (0.00 seconds)\n‚úÖ  All 1 test has been completed.  (0.00 seconds)","category":"page"},{"location":"watch/","page":"watch","title":"watch","text":"to stop watching","category":"page"},{"location":"watch/","page":"watch","title":"watch","text":"julia> Jive.stop(watch)\nstopped watching folders.","category":"page"},{"location":"END/#@__END__","page":"@__END__","title":"@__END__","text":"","category":"section"},{"location":"END/","page":"@__END__","title":"@__END__","text":"throw(Jive.EndError())","category":"page"},{"location":"END/#Jive.@__END__","page":"@__END__","title":"Jive.@__END__","text":"@__END__\n\nthrow(Jive.EndError())\n\n\n\n\n\n","category":"macro"},{"location":"#Jive.jl","page":"Home","title":"Jive.jl üë£","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"https://github.com/wookay/Jive.jl","category":"page"},{"location":"","page":"Home","title":"Home","text":"Jive.jl is a Julia package to help the writing tests.","category":"page"},{"location":"","page":"Home","title":"Home","text":"‚òïÔ∏è  You can make a donation to support this project.","category":"page"},{"location":"useinside/#@useinside","page":"@useinside","title":"@useinside","text":"","category":"section"},{"location":"useinside/","page":"@useinside","title":"@useinside","text":"use inside of the module.","category":"page"},{"location":"useinside/#Jive.@useinside","page":"@useinside","title":"Jive.@useinside","text":"@useinside(expr::Expr)\n\nuse inside of the module.\n\n\n\n\n\n@useinside(mod::Symbol, expr::Expr)\n\nuse inside of the module. mod is the module to evaluate in.\n\n\n\n\n\n","category":"macro"},{"location":"useinside/","page":"@useinside","title":"@useinside","text":"using Jive # @useinside\n@useinside module test_pkgs_flux_optimise\n# ...\nend","category":"page"},{"location":"useinside/","page":"@useinside","title":"@useinside","text":"Main is the module to evaluate in.","category":"page"},{"location":"useinside/","page":"@useinside","title":"@useinside","text":"@useinside Main module test_pkgs_flux_optimise\n# ...\nend","category":"page"},{"location":"runtests/#runtests","page":"runtests","title":"runtests","text":"","category":"section"},{"location":"runtests/","page":"runtests","title":"runtests","text":"run the test files in a specific directory and path.","category":"page"},{"location":"runtests/#Jive.runtests","page":"runtests","title":"Jive.runtests","text":"runtests(dir::String ;\n         failfast::Bool = false,\n         targets::Union{AbstractString, Vector{<: AbstractString}} = String[],\n         skip::Union{Vector{Any}, Vector{<: AbstractString}} = String[],\n         testset::Union{Nothing, AbstractString, Vector{<: AbstractString}, Regex, Base.Callable} = nothing,\n         context::Union{Nothing, Module} = nothing,\n         enable_distributed::Bool = true,\n         node1::Union{Vector{Any}, Vector{<: AbstractString}} = String[],\n         verbose::Bool = true)::Total\n\nrun the test files from the specific directory.\n\ndir: the root directory to traverse.\nfailfast: aborting on the first failure. be overridden when the ENV variable JULIA_TEST_FAILFAST has set.\ntargets: filter targets and start. (space) separated String or a Vector{String}. be overridden when ARGS are not empty.\nskip: files or directories to skip. be overridden when the ENV variable JIVE_SKIP has set. ,(comma) separated.\ntestset: filter testset. default is nothing.\ncontext: module that to be used in Base.include. nothing means to be safe that using anonymous module for every test file.\nenable_distributed: option for distributed. be overridden when the ENV variable JIVE_PROCS has set.\nnode1: run on node 1 during for the distributed tests.\nverbose: print details of test execution\n\n\n\n\n\n","category":"function"},{"location":"runtests/","page":"runtests","title":"runtests","text":"suppose you have some test files in the test/ directory for your package. now let's make your test/runtests.jl with","category":"page"},{"location":"runtests/","page":"runtests","title":"runtests","text":"using Jive\nruntests(@__DIR__)","category":"page"},{"location":"runtests/","page":"runtests","title":"runtests","text":"(Image: runtests.svg)","category":"page"},{"location":"runtests/","page":"runtests","title":"runtests","text":"for the runtests.jl, ARGS are used to filter the targets and to set the start offset of the tests.","category":"page"},{"location":"runtests/","page":"runtests","title":"runtests","text":"~/.julia/dev/Jive/test $ julia runtests.jl jive/s start=3\n1/4 jive/skip/skip-calls.jl --\n2/4 jive/skip/skip-exprs.jl --\n3/4 jive/skip/skip-functions.jl\n    Pass 4  (0.40 seconds)\n4/4 jive/skip/skip-modules.jl\n    Pass 4  (0.01 seconds)\n‚úÖ  All 8 tests have been completed.  (0.62 seconds)","category":"page"},{"location":"runtests/","page":"runtests","title":"runtests","text":"in the above example, test files are matched for only have jive/s and jumping up to the 3rd file.","category":"page"},{"location":"runtests/#Examples","page":"runtests","title":"Examples","text":"","category":"section"},{"location":"runtests/","page":"runtests","title":"runtests","text":"run tests","category":"page"},{"location":"runtests/","page":"runtests","title":"runtests","text":"~/.julia/dev/Jive/test $ julia runtests.jl","category":"page"},{"location":"runtests/","page":"runtests","title":"runtests","text":"run tests with target directory.","category":"page"},{"location":"runtests/","page":"runtests","title":"runtests","text":"~/.julia/dev/Jive/test $ julia runtests.jl jive/If","category":"page"},{"location":"runtests/","page":"runtests","title":"runtests","text":"distributed run tests with -p","category":"page"},{"location":"runtests/","page":"runtests","title":"runtests","text":"~/.julia/dev/Jive/test $ julia -p3 runtests.jl","category":"page"},{"location":"runtests/","page":"runtests","title":"runtests","text":"distributed run tests for Pkg.test(), using JIVE_PROCS ENV.","category":"page"},{"location":"runtests/","page":"runtests","title":"runtests","text":"~/.julia/dev/Jive $ JIVE_PROCS=2 julia --project=. -e 'using Pkg; Pkg.test()'\n\n~/.julia/dev/Jive $ julia --project=. -e 'ENV[\"JIVE_PROCS\"]=\"2\"; using Pkg; Pkg.test()'","category":"page"},{"location":"runtests/","page":"runtests","title":"runtests","text":"TestJive.jl is an example package for using Jive. look at also the test/Project.toml file for your own package.","category":"page"},{"location":"runtests/","page":"runtests","title":"runtests","text":"[deps]\nTest = \"8dfed614-e22c-5e08-85e1-65c5234f0b40\"\nJive = \"ba5e3d4b-8524-549f-bc71-e76ad9e9deed\"\n\n[targets]\ntest = [\"Test\", \"Jive\"]\n\n[compat]\nJive = \"0.3\"","category":"page"},{"location":"runtests/","page":"runtests","title":"runtests","text":"See TestJiveRunMoreTests.jl to care the advanced cases.","category":"page"}]
}
